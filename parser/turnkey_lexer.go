// Code generated from TurnkeyLexer.g4 by ANTLR 4.8. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 29, 170,
	8, 1, 8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6,
	4, 7, 9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12,
	9, 12, 4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9,
	17, 4, 18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22,
	4, 23, 9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4,
	28, 9, 28, 3, 2, 6, 2, 60, 10, 2, 13, 2, 14, 2, 61, 3, 2, 3, 2, 3, 3, 3,
	3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5, 3, 5, 3, 6, 3,
	6, 3, 7, 3, 7, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 11,
	3, 12, 3, 12, 3, 12, 3, 13, 3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3,
	16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 18, 3, 18, 3, 19, 3, 19, 3, 20, 3, 20,
	3, 21, 3, 21, 3, 22, 3, 22, 7, 22, 116, 10, 22, 12, 22, 14, 22, 119, 11,
	22, 3, 23, 3, 23, 7, 23, 123, 10, 23, 12, 23, 14, 23, 126, 11, 23, 3, 23,
	3, 23, 6, 23, 130, 10, 23, 13, 23, 14, 23, 131, 3, 24, 3, 24, 3, 24, 3,
	24, 3, 24, 3, 24, 3, 24, 3, 24, 3, 24, 5, 24, 143, 10, 24, 3, 25, 7, 25,
	146, 10, 25, 12, 25, 14, 25, 149, 11, 25, 3, 25, 3, 25, 7, 25, 153, 10,
	25, 12, 25, 14, 25, 156, 11, 25, 3, 26, 3, 26, 3, 26, 3, 26, 3, 27, 6,
	27, 163, 10, 27, 13, 27, 14, 27, 164, 3, 28, 3, 28, 3, 28, 3, 28, 2, 2,
	29, 4, 3, 6, 4, 8, 5, 10, 6, 12, 7, 14, 8, 16, 9, 18, 10, 20, 11, 22, 12,
	24, 13, 26, 14, 28, 15, 30, 16, 32, 17, 34, 18, 36, 19, 38, 20, 40, 21,
	42, 22, 44, 23, 46, 24, 48, 25, 50, 26, 52, 27, 54, 28, 56, 29, 4, 2, 3,
	9, 5, 2, 11, 12, 15, 15, 34, 34, 3, 2, 51, 59, 3, 2, 50, 59, 3, 2, 97,
	97, 4, 2, 67, 92, 99, 124, 6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 4, 2,
	36, 36, 94, 94, 2, 176, 2, 4, 3, 2, 2, 2, 2, 6, 3, 2, 2, 2, 2, 8, 3, 2,
	2, 2, 2, 10, 3, 2, 2, 2, 2, 12, 3, 2, 2, 2, 2, 14, 3, 2, 2, 2, 2, 16, 3,
	2, 2, 2, 2, 18, 3, 2, 2, 2, 2, 20, 3, 2, 2, 2, 2, 22, 3, 2, 2, 2, 2, 24,
	3, 2, 2, 2, 2, 26, 3, 2, 2, 2, 2, 28, 3, 2, 2, 2, 2, 30, 3, 2, 2, 2, 2,
	32, 3, 2, 2, 2, 2, 34, 3, 2, 2, 2, 2, 36, 3, 2, 2, 2, 2, 38, 3, 2, 2, 2,
	2, 40, 3, 2, 2, 2, 2, 42, 3, 2, 2, 2, 2, 44, 3, 2, 2, 2, 2, 46, 3, 2, 2,
	2, 2, 48, 3, 2, 2, 2, 2, 50, 3, 2, 2, 2, 2, 52, 3, 2, 2, 2, 3, 54, 3, 2,
	2, 2, 3, 56, 3, 2, 2, 2, 4, 59, 3, 2, 2, 2, 6, 65, 3, 2, 2, 2, 8, 67, 3,
	2, 2, 2, 10, 72, 3, 2, 2, 2, 12, 77, 3, 2, 2, 2, 14, 79, 3, 2, 2, 2, 16,
	81, 3, 2, 2, 2, 18, 83, 3, 2, 2, 2, 20, 85, 3, 2, 2, 2, 22, 87, 3, 2, 2,
	2, 24, 90, 3, 2, 2, 2, 26, 93, 3, 2, 2, 2, 28, 95, 3, 2, 2, 2, 30, 98,
	3, 2, 2, 2, 32, 100, 3, 2, 2, 2, 34, 103, 3, 2, 2, 2, 36, 105, 3, 2, 2,
	2, 38, 107, 3, 2, 2, 2, 40, 109, 3, 2, 2, 2, 42, 111, 3, 2, 2, 2, 44, 113,
	3, 2, 2, 2, 46, 120, 3, 2, 2, 2, 48, 142, 3, 2, 2, 2, 50, 147, 3, 2, 2,
	2, 52, 157, 3, 2, 2, 2, 54, 162, 3, 2, 2, 2, 56, 166, 3, 2, 2, 2, 58, 60,
	9, 2, 2, 2, 59, 58, 3, 2, 2, 2, 60, 61, 3, 2, 2, 2, 61, 59, 3, 2, 2, 2,
	61, 62, 3, 2, 2, 2, 62, 63, 3, 2, 2, 2, 63, 64, 8, 2, 2, 2, 64, 5, 3, 2,
	2, 2, 65, 66, 7, 46, 2, 2, 66, 7, 3, 2, 2, 2, 67, 68, 7, 104, 2, 2, 68,
	69, 7, 119, 2, 2, 69, 70, 7, 112, 2, 2, 70, 71, 7, 101, 2, 2, 71, 9, 3,
	2, 2, 2, 72, 73, 7, 118, 2, 2, 73, 74, 7, 119, 2, 2, 74, 75, 7, 116, 2,
	2, 75, 76, 7, 112, 2, 2, 76, 11, 3, 2, 2, 2, 77, 78, 7, 44, 2, 2, 78, 13,
	3, 2, 2, 2, 79, 80, 7, 49, 2, 2, 80, 15, 3, 2, 2, 2, 81, 82, 7, 45, 2,
	2, 82, 17, 3, 2, 2, 2, 83, 84, 7, 47, 2, 2, 84, 19, 3, 2, 2, 2, 85, 86,
	7, 35, 2, 2, 86, 21, 3, 2, 2, 2, 87, 88, 7, 63, 2, 2, 88, 89, 7, 63, 2,
	2, 89, 23, 3, 2, 2, 2, 90, 91, 7, 35, 2, 2, 91, 92, 7, 63, 2, 2, 92, 25,
	3, 2, 2, 2, 93, 94, 7, 64, 2, 2, 94, 27, 3, 2, 2, 2, 95, 96, 7, 64, 2,
	2, 96, 97, 7, 63, 2, 2, 97, 29, 3, 2, 2, 2, 98, 99, 7, 62, 2, 2, 99, 31,
	3, 2, 2, 2, 100, 101, 7, 62, 2, 2, 101, 102, 7, 63, 2, 2, 102, 33, 3, 2,
	2, 2, 103, 104, 7, 63, 2, 2, 104, 35, 3, 2, 2, 2, 105, 106, 7, 42, 2, 2,
	106, 37, 3, 2, 2, 2, 107, 108, 7, 43, 2, 2, 108, 39, 3, 2, 2, 2, 109, 110,
	7, 125, 2, 2, 110, 41, 3, 2, 2, 2, 111, 112, 7, 127, 2, 2, 112, 43, 3,
	2, 2, 2, 113, 117, 9, 3, 2, 2, 114, 116, 9, 4, 2, 2, 115, 114, 3, 2, 2,
	2, 116, 119, 3, 2, 2, 2, 117, 115, 3, 2, 2, 2, 117, 118, 3, 2, 2, 2, 118,
	45, 3, 2, 2, 2, 119, 117, 3, 2, 2, 2, 120, 124, 9, 3, 2, 2, 121, 123, 9,
	4, 2, 2, 122, 121, 3, 2, 2, 2, 123, 126, 3, 2, 2, 2, 124, 122, 3, 2, 2,
	2, 124, 125, 3, 2, 2, 2, 125, 127, 3, 2, 2, 2, 126, 124, 3, 2, 2, 2, 127,
	129, 7, 48, 2, 2, 128, 130, 9, 4, 2, 2, 129, 128, 3, 2, 2, 2, 130, 131,
	3, 2, 2, 2, 131, 129, 3, 2, 2, 2, 131, 132, 3, 2, 2, 2, 132, 47, 3, 2,
	2, 2, 133, 134, 7, 118, 2, 2, 134, 135, 7, 116, 2, 2, 135, 136, 7, 119,
	2, 2, 136, 143, 7, 103, 2, 2, 137, 138, 7, 104, 2, 2, 138, 139, 7, 99,
	2, 2, 139, 140, 7, 110, 2, 2, 140, 141, 7, 117, 2, 2, 141, 143, 7, 103,
	2, 2, 142, 133, 3, 2, 2, 2, 142, 137, 3, 2, 2, 2, 143, 49, 3, 2, 2, 2,
	144, 146, 9, 5, 2, 2, 145, 144, 3, 2, 2, 2, 146, 149, 3, 2, 2, 2, 147,
	145, 3, 2, 2, 2, 147, 148, 3, 2, 2, 2, 148, 150, 3, 2, 2, 2, 149, 147,
	3, 2, 2, 2, 150, 154, 9, 6, 2, 2, 151, 153, 9, 7, 2, 2, 152, 151, 3, 2,
	2, 2, 153, 156, 3, 2, 2, 2, 154, 152, 3, 2, 2, 2, 154, 155, 3, 2, 2, 2,
	155, 51, 3, 2, 2, 2, 156, 154, 3, 2, 2, 2, 157, 158, 7, 36, 2, 2, 158,
	159, 3, 2, 2, 2, 159, 160, 8, 26, 3, 2, 160, 53, 3, 2, 2, 2, 161, 163,
	10, 8, 2, 2, 162, 161, 3, 2, 2, 2, 163, 164, 3, 2, 2, 2, 164, 162, 3, 2,
	2, 2, 164, 165, 3, 2, 2, 2, 165, 55, 3, 2, 2, 2, 166, 167, 7, 36, 2, 2,
	167, 168, 3, 2, 2, 2, 168, 169, 8, 28, 4, 2, 169, 57, 3, 2, 2, 2, 12, 2,
	3, 61, 117, 124, 131, 142, 147, 154, 164, 5, 8, 2, 2, 7, 3, 2, 6, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE", "IN_STRING",
}

var lexerLiteralNames = []string{
	"", "", "','", "'func'", "'turn'", "'*'", "'/'", "'+'", "'-'", "'!'", "'=='",
	"'!='", "'>'", "'>='", "'<'", "'<='", "'='", "'('", "')'", "'{'", "'}'",
}

var lexerSymbolicNames = []string{
	"", "WS", "COMMA", "FUNC", "TURN", "MUL", "DIV", "ADD", "SUB", "BANG",
	"EQ", "NOT_EQ", "GT", "GT_EQ", "LT", "LT_EQ", "ASSIGN", "LPAREN", "RPAREN",
	"LBRACE", "RBRACE", "INT", "FLOAT", "BOOL", "IDENT", "OPEN_STRING", "STRING",
	"CLOSE_STRING",
}

var lexerRuleNames = []string{
	"WS", "COMMA", "FUNC", "TURN", "MUL", "DIV", "ADD", "SUB", "BANG", "EQ",
	"NOT_EQ", "GT", "GT_EQ", "LT", "LT_EQ", "ASSIGN", "LPAREN", "RPAREN", "LBRACE",
	"RBRACE", "INT", "FLOAT", "BOOL", "IDENT", "OPEN_STRING", "STRING", "CLOSE_STRING",
}

type TurnkeyLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewTurnkeyLexer(input antlr.CharStream) *TurnkeyLexer {

	l := new(TurnkeyLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "TurnkeyLexer.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// TurnkeyLexer tokens.
const (
	TurnkeyLexerWS           = 1
	TurnkeyLexerCOMMA        = 2
	TurnkeyLexerFUNC         = 3
	TurnkeyLexerTURN         = 4
	TurnkeyLexerMUL          = 5
	TurnkeyLexerDIV          = 6
	TurnkeyLexerADD          = 7
	TurnkeyLexerSUB          = 8
	TurnkeyLexerBANG         = 9
	TurnkeyLexerEQ           = 10
	TurnkeyLexerNOT_EQ       = 11
	TurnkeyLexerGT           = 12
	TurnkeyLexerGT_EQ        = 13
	TurnkeyLexerLT           = 14
	TurnkeyLexerLT_EQ        = 15
	TurnkeyLexerASSIGN       = 16
	TurnkeyLexerLPAREN       = 17
	TurnkeyLexerRPAREN       = 18
	TurnkeyLexerLBRACE       = 19
	TurnkeyLexerRBRACE       = 20
	TurnkeyLexerINT          = 21
	TurnkeyLexerFLOAT        = 22
	TurnkeyLexerBOOL         = 23
	TurnkeyLexerIDENT        = 24
	TurnkeyLexerOPEN_STRING  = 25
	TurnkeyLexerSTRING       = 26
	TurnkeyLexerCLOSE_STRING = 27
)

// TurnkeyLexerIN_STRING is the TurnkeyLexer mode.
const TurnkeyLexerIN_STRING = 1
